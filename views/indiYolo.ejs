<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Review da YoLo</title>
    <link rel="icon" type="image/x-icon" href="/YoLo.png">
    <%- include("./partials/files.ejs") %>

    <style>
        body {
            background-color: rgb(0, 0, 0);
            font-family: 'Courier New', Courier, monospace;
        }

        .ticker-background {
            display: inline-block;
            width: 420px;
            height: 169px;
            background-size: contain;
            background-repeat: no-repeat;
            background-position: center;
            color: transparent;
        }

        .footer {
            position: fixed;
            bottom: 0;
            width: 100%;
            text-align: center;
            font-size: smaller;
            color: aliceblue;
            background-color: rgba(0, 0, 0, 0.7);
            padding: 10px;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
        }

        .modal-content {
            margin: 15% auto;
            padding: 20px;
            background-color: white;
            width: 80%;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close:hover, .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
    </style>
</head>
<body>

    <h1 style="color: rgb(13, 100, 13)">You spun your luck on that... <%= yolos.ticker %></h1>
    <br>
    <a href="/yolos"><button>Back to my list o YoLos</button></a>
    <br>

    <h2 style="color: whitesmoke">Here are the betting specs you made for:</h2>
    
 <!-- Add this text above the ticker logo, styled to match the disclaimer text size -->
<h2 style="color: whitesmoke; font-size: smaller; margin-bottom: 10px;">
    Click your YoLo logo for more information
</h2>

<!-- Background image on H2 with the ticker logo -->
<h2 class="ticker-background" style="background-image: url('/ticklogos/<%= yolos.ticker %>.png');"></h2>


    <h3 style="color: whitesmoke">$$$ Amount: $ <%= yolos.amount %></h3>

    <h5 style="color: whitesmoke">Your plan is to make <%= yolos.profitP %>% over the next <%= yolos.duration %> days with <%= yolos.yolo ? 'Diamond Hands!' : 'lil paper ' + yolos.riskP + '% weak hands!' %></h5>

    <br><br>

    <a href="/yolos/<%= yolos._id %>/edit"><button>Sniffles... but I need to make change$</button></a>
    <br><br>

    <form method="POST" action="/yolos/<%= yolos._id %>?_method=DELETE">
        <input type="submit" value="Save whatever is left or already won please" />
    </form>

    <div class="footer">
        <p>Disclaimer: The WSRY Wheel is for entertainment purposes only. Investments carry risk, and past performance does not guarantee future results. Always play responsibly.</p>
    </div>

    <!-- Modal structure for ticker data -->
<!-- Modal structure for ticker data -->
<div id="tickerModal" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <!-- Content from API -->
        <h2 id="companyName"></h2>
        <p id="closingPrice"></p> <!-- Closing Price and Percentage Change -->
        <p><a href="#" id="companyUrl" target="_blank"></a></p> <!-- Link for the company URL -->
        <p id="description"></p> <!-- Company description -->
    </div>
</div>


    <!-- Add your scripts at the bottom of the body -->
    
    <script>
        const ticker = "<%= yolos.ticker %>"; // Pass your ticker dynamically here

        // Declare modal once
        const modal = document.getElementById('tickerModal');

        // Event listener for clicking the logo
        document.querySelector('.ticker-background').addEventListener('click', function() {
            // Show modal with ticker data
            modal.style.display = 'block';

            // Define both API calls
            const companyInfoUrl = `https://api.polygon.io/v3/reference/tickers/${ticker}?apiKey=HMKHCCgqWLvu_C9a8aiprQNGVLIgZxvn`;
            const snapshotUrl = `https://api.polygon.io/v2/snapshot/locale/us/markets/stocks/tickers?tickers=${ticker}&apiKey=HMKHCCgqWLvu_C9a8aiprQNGVLIgZxvn`;

            // Fetch both data sets using Promise.all()
            Promise.all([
                fetch(companyInfoUrl),
                fetch(snapshotUrl)
            ])
            .then(responses => Promise.all(responses.map(response => response.json())))  // Parse both responses as JSON
            .then(data => {
                const companyData = data[0];  // First API response (Company Info)
                const snapshotData = data[1]; // Second API response (Snapshot Info)

                console.log(companyData);  // Log company data
                console.log(snapshotData); // Log snapshot data

                // Populate modal with company data
                document.getElementById('companyName').innerText = companyData.results.name;

                // Closing price and percentage change from snapshot data
                if (snapshotData.tickers && snapshotData.tickers.length > 0) {
                    const stockInfo = snapshotData.tickers[0];
                    const closingPrice = stockInfo.day.c;  // Closing price from the "day" object
                    const percentChange = stockInfo.todaysChangePerc; // Percentage change
                    document.getElementById('closingPrice').innerText = `Closing Price: $${closingPrice.toFixed(2)} (${percentChange.toFixed(2)}%)`;
                }

                // Set company URL and anchor text using homepage_url, after the closing price
                const companyUrl = document.getElementById('companyUrl');
                companyUrl.href = companyData.results.homepage_url ? companyData.results.homepage_url : '#';
                companyUrl.innerText = companyData.results.homepage_url ? companyData.results.homepage_url : 'No website available';

                // Description from company data
                document.getElementById('description').innerText = companyData.results.description;

            })
            .catch(error => console.error('Error fetching data:', error));
        });

        // Event listener for closing modal when user clicks on the close button
        document.querySelector('.close').addEventListener('click', function() {
            modal.style.display = 'none';
        });

        // Close modal if user clicks outside of it
        window.onclick = function(event) {
            if (event.target == modal) {
                modal.style.display = 'none';
            }
        };
    </script>




</body>
</html>
